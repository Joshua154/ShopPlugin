shop.sql.uuids:
  - "596b9acc-d337-4bed-a7a5-7c407d2938cf"
shop.prefix: "<gray>[<bold><gradient:#ff930f:#fff95b>Shop</gradient></bold>]</gray><white>"
discord.debugWebhook: "https://discord.com/api/webhooks/1175339451157843978/xi7bUSgGW8GbjpRckep3SaObq-Cu-ob4l-u6BgG9WfTh7GcFSy68ObimnXwvqliliZDG"
discord.shopWebhook: "https://discord.com/api/webhooks/1175339451157843978/xi7bUSgGW8GbjpRckep3SaObq-Cu-ob4l-u6BgG9WfTh7GcFSy68ObimnXwvqliliZDG"

shop.command.announce: "<click:run_command:/open <item_id>>Drücke hier um das Angebot von <player_name> anzusehen"

shop.languages:
  - "de_de"

shop.makeOffer.success: "Angebot gesendet"
shop.makeOffer.accept: "Angebot akzeptiert"
shop.makeOffer.invalid: "Angebot ungültig"
shop.makeOffer.gui.name: "Mache ein Angebot"
shop.makeOffer.gui.display.buyItem: "Produkt"
shop.makeOffer.gui.display.offeredItem: "Angebotenes Item"
shop.makeOffer.gui.button.confirm: "Angebot senden"
shop.makeOffer.gui.button.cancel: "Abbrechen"


shop.offers.deny: "Angebot entfernt"
shop.offers.accept: "Item verkauft"
shop.offers.gui.name: "Angebote"
shop.offers.gui.display.buyItem: "Produkt"
shop.offers.gui.display.offeredItem: "Angebotenes Item"
shop.offers.gui.button.confirm: "Angebot akzeptieren"
shop.offers.gui.button.cancel: "Abbrechen"
shop.offers.gui.button.deny: "Angebot ablehnen"


shop.offeredItems.gui.name: "Angebote"
shop.offeredItems.gui.button.back: "Zurück"


shop.storedItems.gui.name: "Gelagerte Items"
shop.storedItems.gui.button.back: "Zurück"


shop.selection.item.gui.display.buyItem: "Wähle ein Item"


shop.selection.quantity.gui.display.buyItem: "Wähle Anzahl"


shop.buy.success: "Item gekauft"
shop.buy.notAffordable: "Du kannst dir das Item nicht leisten"
shop.buy.removed: "Item entfernt"
shop.buy.gui.name: "Kaufen"
shop.buy.gui.display.buyItem: "Produkt"
shop.buy.gui.display.price: "Preis"
shop.buy.gui.button.confirm: "Kauf bestätigen"
shop.buy.gui.button.sendOffer: "Angebot senden"
shop.buy.gui.button.cancel: "Abbrechen"
shop.buy.gui.button.remove: "Item entfernen"
shop.buy.gui.button.announce: "Ankündigen"


shop.sell.gui.name: "Verkaufen"
shop.sell.gui.display.sellItem: "Produkt"
shop.sell.gui.display.customPrice: "Preis"
shop.sell.gui.display.customPriceSelection: "Wähle ein Preis"
shop.sell.gui.button.confirm: "Produkt verkaufen"
shop.sell.gui.button.cancel: "Abbrechen"


shop.shop.gui.name: "Shop"
shop.shop.gui.button.sell: "Verkaufen"
shop.shop.gui.button.offeredItems: "Deine Angebote"
shop.shop.gui.button.storedItems: "Gelagerte Items"
shop.shop.gui.button.search: "Suche"
shop.shop.gui.search.title: "Suche nach einem Item"
shop.shop.gui.search.default_text: ""


shop.shop.categories.item.name: "Sortieren nach"
shop.shop.categories.item.sell: "<gray>Kaufitem</gray>"
shop.shop.categories.item.price: "<gray>Preis</gray>"
shop.shop.categories.item.oldTnew: "<gray>Alt -> Neu</gray>"
shop.shop.categories.item.newTold: "<gray>Neu -> Alt</gray>"


shop.error.invalidArgs: "Ungültige Argumente"
shop.error.itemUnavailable: "Dieses Item ist nicht verfügbar"
shop.error.itemSold: "Dieses Item wurde bereits verkauft"
shop.error.noPermission: "Du hast keine Berechtigung für diesen Befehl"
shop.error.noSellItem: "Du kannst keine Luft verkaufen"
shop.error.noPriceItem: "Du musst einen Preis angeben"
shop.error.unknown: "Unbekannt"


shop.item.offered.lore:
  - "<!i><gray>Preis:</gray> <aqua><lang:<price_trans_key>></aqua>"
  - "<!i><gray>Angebot von:</gray> <offered_by>"
  - "<!i><gray>Angebot erstellt:</gray> <aqua><time></aqua>"


shop.item.sellItem.lore:
  - "<!i><gray>Verkäufer:</gray> <seller>"
  - "<!i><gray>Preis:</gray> <aqua><lang:<price_trans_key>></aqua>"
  - "<!i><gray>erstellt am:</gray> <aqua><time></aqua>"


shop.item.storedItems.lore:
  - "<!i><gray>Gekauft von:</gray> <bought_by>"
  - "<!i><gray>Gekauft am:</gray> <aqua><time></aqua>"


shop.pageGUI.previous: "Vorherige Seite"
shop.pageGUI.next: "Nächste Seite"


shop.sql.createTables:
  - 'CREATE TABLE IF NOT EXISTS "sellItems"
       (
           id          integer     not null
               constraint sellItems_pk
                   primary key autoincrement,
           seller_uuid VARCHAR(40) not null,
           createdOn   DATETIME default CURRENT_TIMESTAMP,
           boughtAt    TIMESTAMP,
           item        text        not null,
           price       text,
           bought      BOOLEAN  default FALSE,
           buyer_uuid  VARCHAR(40)
       )'
  - 'CREATE TABLE IF NOT EXISTS "itemOffers"
       (
           id          integer                            not null
               constraint storedItems_pk
                   primary key autoincrement,
           to_uuid     VARCHAR(40)                        not null,
           from_uuid   VARCHAR(40)                        not null,
           timestamp   DATETIME default CURRENT_TIMESTAMP not null,
           offeredItem text                               not null,
           buyItemID   integer
       )'
  - 'CREATE TABLE IF NOT EXISTS "storedItems"
       (
           id         integer                            not null
               constraint storedItems_pk
                   primary key autoincrement,
           to_uuid    VARCHAR(40)                        not null,
           from_uuid  VARCHAR(40)                        not null,
           timestamp  DATETIME default CURRENT_TIMESTAMP not null,
           item       text                               not null,
           soldItemID integer
               constraint storedItems_sell_items_id_fk
                   references sell_items
       )'