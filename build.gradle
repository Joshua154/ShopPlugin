buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.github.johnrengelman:shadow:8.1.1"
    }
}

plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.2.0"
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "codemc-snapshots"
        url = "https://repo.codemc.io/repository/maven-snapshots/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT"
    compileOnly "org.xerial:sqlite-jdbc:3.42.0.0"
    implementation("net.wesjd:anvilgui:1.9.0-SNAPSHOT")
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    runServer {
        downloadPlugins {
            github("ViaVersion", "ViaVersion", "4.8.1", "ViaVersion-4.8.1.jar")
            github("ViaVersion", "ViaBackwards", "4.8.1", "ViaBackwards-4.8.1.jar")
        }
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.20.2")
    }
}

tasks.register('createZIP', Zip) {
    dependsOn build
    from "build/libs"
    include "*.jar"
    archiveFileName = "ShopPlugin.zip"
    destinationDirectory = file("build/zip")
}